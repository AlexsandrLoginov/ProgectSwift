import Cocoa

// Полная запись объявления массива
var array = Array<Int>(arrayLiteral: 1, 2, 3, 4, 5)
let array2: Array<Int> = [1, 2, 3, 4, 5]

// Сокращенная запись объявления массива
var array3 = [1, 2, 3, 4, 5]
let array4: [Int] = [1, 2, 3, 4, 5]

// Объявление пустого массива
var array5 = Array<Int>()
let array6 = [Int]()

// Объединение нескольких массивов в 1 при помощи оператора (+)
var array7 = array + [6, 7, 8, 9, 10] + array2

// Создание массива с дефолтным значением
var array8 = Array(repeating: 28, count: 10)

// Доступ к элементам массива и их изменение

// Обращение к элементу массива по индексу
array[0]
array7[8]

// Изменение элемента массива
array7[0] = 20

// Обращение к диапазону элементов в массиве
array7[5...9]

// Изменение значений диапазона элементов в массиве
array7[5...9] = [10, 20, 30, 40, 50]

// Методы массивов

// Узнаем сколько элементов в массиве
array7.count

// Узнаем пустой ли наш массив
array7.isEmpty

// Получение индекса первого и последнего элемента в массиве
array7.endIndex
array7.startIndex

// Переворачиваем элементы массива
array7.reverse()

// Находим максимальное и минимальное значение в массиве
array7.max()
array7.min()

// Вставляем элементы в конец массива
array7.append(100)

// Вставляем коллекцию элементов в массив
array7.append(contentsOf: [200, 300, 400, 500])

// Вставляем элемент в массив по индексу
array7.insert(555, at: 8)

// Удаление элемента массива по индексу
array7.remove(at: 8)

// Удаляем первый элемент массива
array7.removeFirst()

// Удаляем последний элемент массива
array7.removeLast()

// Удаление всех элементов массива
array3.removeAll()

// Итерации в массивах

// Выводим все элементы массива в консоль
for item in array7{
    print(item)
}

// Получаем индексы элементов в массиве и их значения при помощи картежа
                     // Оператор возврата картежа
for (index, item) in array7.enumerated(){
    print("Индекс \(index) - элемент \(item)")
}

// Определение к какому типу относиться массив
type(of: array7)

// Объявление массива при помощи функции (repeating). Получаем массив массивов
var arra9 = Array(repeating: Array(repeating: 43, count: 5), count: 3)

// Сложение элементов массива и перемешивание их при помощи метода (shuffled())
var arr = [1, 2, 3, 4, 5]
var arr2 = [10, 11, 12, 13, 14, 15]
var arr3 = (arr + arr2).shuffled()
print(arr3)

// Находим все элементы массива arr2 из нового массива arr3
for (index, item) in arr3.enumerated() where arr2.contains(item) {
    print(index)
}
// Обращение к несуществующему элементу в массиве
extension Array{
    // Переопределяем сабскрипт
                    // Объявляем свой сабскрипт
    public subscript(safe index: Int) -> Element?{
              // indices - все индексы в массиве
        return indices ~= index ? self[index] : nil
    }
}
// Обращение к массиву через наш переопределенный массив
arr3[safe: 100]

// Фильтруем значения в массиве по определенному правилу и возвращаем другой массив
var arr4 = arr2.filter { (value) -> Bool in
    return value < 12
}

// Проходим по элементам массива и выполняем с ними операцию умножения при помощи оператора (map)
var arr5 = arr2.map { (value) -> Int in
    return value * 8
}

// Получаем из коллекции элементов массива одно значение (умножаем или складываем все элементы массива и получаем сумму)
var arr6 = [28, 73, 94, 37, 64]
var arr7 = arr6.reduce(0) { (sum, value) in
    return sum + value
}
print(arr7)
